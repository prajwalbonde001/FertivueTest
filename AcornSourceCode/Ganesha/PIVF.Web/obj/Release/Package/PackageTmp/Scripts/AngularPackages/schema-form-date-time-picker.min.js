angular.module("schemaForm").run(["$templateCache", function (e) {
    e.put("directives/decorators/bootstrap/strap/datepicker.html", '<div class="form-horizontal"><div class=" col-xs-3"><div class="form-group"><label class="col-xs-12 control-label" ng-show="showTitle()">{{form.title}}</label><div class="col-xs-12"><div class="date"  ng-class="{\'has-error\': hasError(), \'has-success\': hasSuccess(), \'has-feedback\': form.feedback !== false }"><input type="text" placeholder="dd-Mmm-yyyy" class="form-control dt-p-r-8" ng-show="form.key" ng-model="$$value$$" schema-validate="form" data-date-type="{{form.dateOptions.dateType || \'string\'}}" data-date-format="{{form.dateOptions.dateFormat || \'dd/MM/yyyy\'}}" data-autoclose="{{form.dateOptions.autoclose}}" data-min-date="{{form.dateOptions.minDate}}" data-max-date="{{form.dateOptions.maxDate}}" data-use-navitve="{{form.dateOptions.useNative || false}}" bs-datepicker=""> </div><div class="help-block" ng-show="(hasError() && errorMessage(schemaError())) || form.description" ng-bind-html="(hasError() && errorMessage(schemaError())) || form.description"></div></div></div></div></div>'),
    e.put("directives/decorators/bootstrap/strap/datetimepicker.html", '<div class="form-group" ng-class="{\'has-error\': hasError(), \'has-success\': hasSuccess(), \'has-feedback\': form.feedback !== false }"><label class="control-label" ng-show="showTitle()">{{form.title}}</label><div class="row"><div class="form-control-date"><div class="input-group"><span class="input-group-addon"><i class="fa fa-calendar"></i></span> <input type="text"  class="form-control" ng-show="form.key" ng-model="$$value$$" data-date-type="object" data-date-format="{{form.options.dateFormat || \'dd/MM/yyyy\'}}" data-autoclose="{{form.options.autoclose || \'1\'}}" data-min-date="{{form.options.minDate}}" data-max-date="{{form.options.maxDate}}" data-use-navitve="{{form.options.useNative || false}}" bs-datepicker=""></div></div><div class="form-control-time"><div class="input-group"><span class="input-group-addon"><i class="fa fa-clock-o"></i></span> <input type="text" class="form-control" size="8" ng-show="form.key" ng-model="$$value$$" data-time-type="object" data-time-format="{{form.options.timeFormat || \'shortTime\'}}" data-minute-step="{{form.options.minuteStep || \'15\'}}" data-use-native="{{form.options.useNative || false}}" bs-timepicker=""></div></div></div><input type="hidden" sf-changed="form" ng-model="$$value$$" schema-validate="form"><div class="help-block" ng-show="(hasError() && errorMessage(schemaError())) || form.description" ng-bind-html="(hasError() && errorMessage(schemaError())) || form.description"></div></div>'),

    e.put("directives/decorators/bootstrap/strap/timepicker.html", '<div class="col-xs-3 form-horizontal"><div class="form-group " ng-class="{\'has-error\': hasError(), \'has-success\': hasSuccess(), \'has-feedback\': form.feedback !== false }"><label class="col-xs-12 control-label" ng-show="showTitle()">{{form.title}}</label><div class="col-xs-12"><div class="form-control-time"><div class="input-group date"><input type="text" placeholder="HH:MM" class="form-control" size="8" ng-show="form.key" ng-model="$$value$$" schema-validate="form" data-time-type="{{form.timeOptions.timeType || \'string\'}}" data-arrow-behavior="picker" data-time-format="HH:mm" data-minute-step="1" bs-timepicker=""></div><span ng-if="form.feedback !== false" class="form-control-feedback" ng-class="evalInScope(form.feedback)"></span></div></div><div class="help-block" ng-show="(hasError() && errorMessage(schemaError())) || form.description" ng-bind-html="(hasError() && errorMessage(schemaError())) || form.description"></div></div>')
}]), angular.module("schemaForm-datepicker", ["schemaForm", "mgcrea.ngStrap"]).config(["schemaFormProvider", "schemaFormDecoratorsProvider", "sfPathProvider", function (e, a, r) { var t = function (a, t, o) { if (("string" === t.type || "number" === t.type) && "datepicker" == t.format) { var s = e.stdFormObj(a, t, o); return s.key = o.path, s.type = "datepicker", o.lookup[r.stringify(o.path)] = s, s } }; e.defaults.string.unshift(t), a.addMapping("bootstrapDecorator", "datepicker", "directives/decorators/bootstrap/strap/datepicker.html"), a.createDirective("datepicker", "directives/decorators/bootstrap/strap/datepicker.html") }]), angular.module("schemaForm-datetimepicker", ["schemaForm", "mgcrea.ngStrap"]).config(["schemaFormProvider", "schemaFormDecoratorsProvider", "sfPathProvider", function (e, a, r) { var t = function (a, t, o) { if ("object" === t.type && "datetimepicker" == t.format) { var s = e.stdFormObj(a, t, o); return s.key = o.path, s.type = "datetimepicker", o.lookup[r.stringify(o.path)] = s, s } }; e.defaults.object.unshift(t), a.addMapping("bootstrapDecorator", "datetimepicker", "directives/decorators/bootstrap/strap/datetimepicker.html"), a.createDirective("datetimepicker", "directives/decorators/bootstrap/strap/datetimepicker.html") }]), angular.module("schemaForm-timepicker", ["schemaForm", "mgcrea.ngStrap"]).config(["schemaFormProvider", "schemaFormDecoratorsProvider", "sfPathProvider", function (e, a, r) { var t = function (a, t, o) { if (("string" === t.type || "number" === t.type) && "timepicker" == t.format) { var s = e.stdFormObj(a, t, o); return s.key = o.path, s.type = "timepicker", o.lookup[r.stringify(o.path)] = s, s } }; e.defaults.string.unshift(t), a.addMapping("bootstrapDecorator", "timepicker", "directives/decorators/bootstrap/strap/timepicker.html"), a.createDirective("timepicker", "directives/decorators/bootstrap/strap/timepicker.html") }]);

//Date Picker <span ng-if="form.feedback !== false" class="form-control-feedback" ng-class="evalInScope(form.feedback) || {\'glyphicon\': true, \'glyphicon-ok\': hasSuccess(), \'glyphicon-remove\': hasError() }"></span>
//input-group remove form date class div